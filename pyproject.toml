[tool.poetry]
name = "booker"
version = "0.1.0"
description = ""
authors = ["Przemysław Kaliś <przemek.kalis@gmail.com>"]
packages = [
    { include = "./manage.py" },
    { include = "booker" },
    { include = "booker_api" },
    { include = "operator_api" },
]

[tool.poetry.dependencies]
python = "^3.10"
Django = "^3.2.9"
dj-database-url = "^0.5.0"
django-cors-headers = "^3.10.0"
django-environ = "^0.8.1"
djangorestframework = "^3.12.4"
drf-access-policy = "^1.1.0"
gunicorn = "^20.1.0"
psycopg2-binary = "^2.9.2"
whitenoise = "^5.3.0"

[tool.poetry.dev-dependencies]
pytest = "^6.2"
black = "^21.11b1"
Faker = "^9.9.0"
isort = "^5.10.1"
pre-commit = "^2.16.0"
pyright = "^0.0.13"
pytest-django = "^4.5.1"
pytest-mock = "^3.6.1"

[tool.pyright]
include = ["booker", "booker_api", "operator_api", "tests"]
reportPropertyTypeMismatch = "error"
reportUnusedImport = "error"
reportUnusedClass = "error"
reportUnusedFunction = "error"
reportUnusedVariable = "error"
reportDuplicateImport = "error"
reportWildcardImportFromLibrary = "warning"
reportPrivateUsage = "warning"
reportPrivateImportUsage = "warning"
reportConstantRedefinition = "warning"
reportIncompatibleMethodOverride = "error"
reportIncompatibleVariableOverride = "error"
reportInconsistentConstructor = "error"
reportOverlappingOverload = "error"
reportMissingSuperCall = "error"
reportUninitializedInstanceVariable = "error"
reportUnnecessaryIsInstance = "error"
reportUnnecessaryCast = "error"
reportUnnecessaryComparison = "error"
reportAssertAlwaysTrue = "error"
reportSelfClsParameterName = "error"
reportImplicitStringConcatenation = "information"
reportUnusedCallResult = "information"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
